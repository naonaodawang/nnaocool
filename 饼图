<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>小红书笔记情感分析</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.8/dist/chart.umd.min.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#ff2442', // 小红书风格的红色
                        secondary: '#f8f8f8',
                        positive: '#52c41a',
                        neutral: '#faad14',
                        negative: '#ff4d4f'
                    },
                    fontFamily: {
                        sans: ['Inter', 'system-ui', 'sans-serif'],
                    },
                }
            }
        }
    </script>
    <style type="text/tailwindcss">
        @layer utilities {
            .content-auto {
                content-visibility: auto;
            }
            .card-shadow {
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            }
            .hover-scale {
                transition: transform 0.3s ease;
            }
            .hover-scale:hover {
                transform: scale(1.02);
            }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- 顶部导航 -->
    <header class="bg-white shadow-sm sticky top-0 z-50">
        <div class="container mx-auto px-4 py-3 flex justify-between items-center">
            <div class="flex items-center space-x-2">
                <i class="fa fa-pie-chart text-primary text-2xl"></i>
                <h1 class="text-xl font-bold text-gray-800">小红书笔记情感分析</h1>
            </div>
            <nav>
                <ul class="flex space-x-6">
                    <li><a href="#overview" class="text-gray-600 hover:text-primary transition-colors">概览</a></li>
                    <li><a href="#details" class="text-gray-600 hover:text-primary transition-colors">详细数据</a></li>
                    <li><a href="#samples" class="text-gray-600 hover:text-primary transition-colors">样本笔记</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main class="container mx-auto px-4 py-8">
        <!-- 概览部分 -->
        <section id="overview" class="mb-12">
            <div class="bg-white rounded-xl p-6 card-shadow hover-scale">
                <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
                    <i class="fa fa-bar-chart text-primary mr-2"></i>情感分析概览
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div class="h-80">
                        <canvas id="sentimentChart"></canvas>
                    </div>
                    <div class="flex flex-col justify-center">
                        <div class="mb-6">
                            <h3 class="text-lg font-semibold text-gray-700 mb-4">情感分布情况</h3>
                            <div id="sentiment-stats" class="space-y-4">
                                <!-- 数据将通过JS动态填充 -->
                            </div>
                        </div>
                        <div class="mt-4">
                            <button id="refresh-btn" class="bg-primary hover:bg-primary/90 text-white font-medium py-2 px-6 rounded-full transition-colors flex items-center">
                                <i class="fa fa-refresh mr-2"></i>重新加载数据
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- 详细数据部分 -->
        <section id="details" class="mb-12">
            <div class="bg-white rounded-xl p-6 card-shadow hover-scale">
                <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
                    <i class="fa fa-table text-primary mr-2"></i>情感详细数据
                </h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">情感类型</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">数量</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">占比</th>
                            </tr>
                        </thead>
                        <tbody id="details-table-body" class="bg-white divide-y divide-gray-200">
                            <!-- 数据将通过JS动态填充 -->
                        </tbody>
                    </table>
                </div>
            </div>
        </section>

        <!-- 样本笔记部分 -->
        <section id="samples" class="mb-12">
            <div class="bg-white rounded-xl p-6 card-shadow hover-scale">
                <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
                    <i class="fa fa-comments text-primary mr-2"></i>样本笔记
                </h2>
                <div id="samples-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- 样本笔记将通过JS动态填充 -->
                </div>
            </div>
        </section>
    </main>

    <footer class="bg-gray-800 text-white py-8">
        <div class="container mx-auto px-4">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="mb-4 md:mb-0">
                    <h3 class="text-lg font-semibold">小红书笔记情感分析</h3>
                    <p class="text-gray-400 text-sm mt-1">基于AI的社交媒体内容情感洞察</p>
                </div>
                <div class="flex space-x-4">
                    <a href="#" class="text-gray-400 hover:text-white transition-colors">
                        <i class="fa fa-github text-xl"></i>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-white transition-colors">
                        <i class="fa fa-twitter text-xl"></i>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-white transition-colors">
                        <i class="fa fa-linkedin text-xl"></i>
                    </a>
                </div>
            </div>
            <div class="border-t border-gray-700 mt-6 pt-6 text-center text-gray-400 text-sm">
                © 2023 小红书笔记情感分析工具 | 由AI提供支持
            </div>
        </div>
    </footer>

    <script>
        // 全局变量
        let sentimentData = null;
        let sentimentChart = null;
        
        // 颜色映射
        const sentimentColors = {
            'positive': '#52c41a', // 绿色
            'neutral': '#faad14',  // 黄色
            'negative': '#ff4d4f'  // 红色
        };
        
        const sentimentLabels = {
            'positive': '积极',
            'neutral': '中性',
            'negative': '消极'
        };
        
        // 加载数据函数
        function loadData() {
            // 实际应用中应该从服务器获取数据
            // 这里为了演示，使用模拟数据
            fetch('sentiment_data.json')
                .then(response => response.json())
                .then(data => {
                    sentimentData = data;
                    renderSentimentChart();
                    renderSentimentStats();
                    renderDetailsTable();
                    renderSampleNotes();
                    
                    // 显示加载完成的提示
                    showNotification('数据加载完成', 'success');
                })
                .catch(error => {
                    console.error('Error loading data:', error);
                    showNotification('数据加载失败，请确保JSON文件路径正确', 'error');
                });
        }
        
        // 渲染情感饼图
        function renderSentimentChart() {
            if (!sentimentData) return;
            
            const ctx = document.getElementById('sentimentChart').getContext('2d');
            
            // 提取数据
            const counts = sentimentData.sentiment_data.map(item => item.count);
            const labels = sentimentData.sentiment_data.map(item => sentimentLabels[item.sentiment]);
            const colors = sentimentData.sentiment_data.map(item => sentimentColors[item.sentiment]);
            
            // 如果图表已存在，销毁它
            if (sentimentChart) {
                sentimentChart.destroy();
            }
            
            // 创建新图表
            sentimentChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: counts,
                        backgroundColor: colors,
                        borderColor: '#ffffff',
                        borderWidth: 2,
                        hoverOffset: 15
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                font: {
                                    size: 14
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.7)',
                            titleFont: {
                                size: 16
                            },
                            bodyFont: {
                                size: 14
                            },
                            padding: 12,
                            cornerRadius: 8,
                            displayColors: true,
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw || 0;
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = Math.round((value / total) * 100);
                                    return `${label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    },
                    animation: {
                        animateScale: true,
                        animateRotate: true,
                        duration: 2000,
                        easing: 'easeOutQuart'
                    }
                }
            });
        }
        
        // 渲染情感统计信息
        function renderSentimentStats() {
            if (!sentimentData) return;
            
            const statsContainer = document.getElementById('sentiment-stats');
            statsContainer.innerHTML = '';
            
            // 计算总数
            const total = sentimentData.sentiment_data.reduce((sum, item) => sum + item.count, 0);
            
            // 为每种情感类型创建卡片
            sentimentData.sentiment_data.forEach(item => {
                const sentimentType = item.sentiment;
                const count = item.count;
                const percentage = Math.round((count / total) * 100);
                
                const card = document.createElement('div');
                card.className = 'flex items-center p-4 rounded-lg border-l-4';
                card.style.borderColor = sentimentColors[sentimentType];
                card.style.backgroundColor = `${sentimentColors[sentimentType]}10`;
                
                card.innerHTML = `
                    <div class="mr-4">
                        <i class="fa fa-smile-o text-3xl" style="color: ${sentimentColors[sentimentType]}"></i>
                    </div>
                    <div>
                        <h4 class="font-medium text-gray-800">${sentimentLabels[sentimentType]}</h4>
                        <p class="text-2xl font-bold text-gray-800">${count} <span class="text-sm font-normal text-gray-600">(${percentage}%)</span></p>
                    </div>
                `;
                
                statsContainer.appendChild(card);
            });
        }
        
        // 渲染详细数据表
        function renderDetailsTable() {
            if (!sentimentData) return;
            
            const tableBody = document.getElementById('details-table-body');
            tableBody.innerHTML = '';
            
            // 计算总数
            const total = sentimentData.sentiment_data.reduce((sum, item) => sum + item.count, 0);
            
            // 按数量从多到少排序
            const sortedData = [...sentimentData.sentiment_data].sort((a, b) => b.count - a.count);
            
            sortedData.forEach(item => {
                const sentimentType = item.sentiment;
                const count = item.count;
                const percentage = Math.round((count / total) * 100);
                
                const row = document.createElement('tr');
                row.className = 'hover:bg-gray-50 transition-colors';
                
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <div class="h-3 w-3 rounded-full mr-2" style="background-color: ${sentimentColors[sentimentType]}"></div>
                            <span class="font-medium text-gray-900">${sentimentLabels[sentimentType]}</span>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="text-gray-900">${count}</span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="w-full bg-gray-200 rounded-full h-2.5">
                            <div class="bg-${sentimentType} h-2.5 rounded-full" style="width: ${percentage}%"></div>
                        </div>
                        <span class="text-sm text-gray-700 ml-2">${percentage}%</span>
                    </td>
                `;
                
                tableBody.appendChild(row);
            });
        }
        
        // 渲染样本笔记
        function renderSampleNotes() {
            if (!sentimentData) return;
            
            const samplesContainer = document.getElementById('samples-container');
            samplesContainer.innerHTML = '';
            
            sentimentData.sample_notes.forEach(note => {
                const sentimentType = note.sentiment;
                const title = note['标题'];
                
                const card = document.createElement('div');
                card.className = 'bg-white rounded-lg p-5 border border-gray-200 hover-scale';
                
                card.innerHTML = `
                    <div class="flex items-start">
                        <div class="h-10 w-10 rounded-full flex items-center justify-center mr-4" 
                             style="background-color: ${sentimentColors[sentimentType]}10; color: ${sentimentColors[sentimentType]}">
                            <i class="fa ${getSentimentIcon(sentimentType)}"></i>
                        </div>
                        <div class="flex-1">
                            <p class="text-sm text-gray-500 mb-1">${sentimentLabels[sentimentType]}</p>
                            <p class="text-gray-800 line-clamp-3">${title}</p>
                        </div>
                    </div>
                `;
                
                samplesContainer.appendChild(card);
            });
        }
        
        // 根据情感类型获取图标
        function getSentimentIcon(sentimentType) {
            switch(sentimentType) {
                case 'positive':
                    return 'fa-smile-o';
                case 'negative':
                    return 'fa-frown-o';
                case 'neutral':
                    return 'fa-meh-o';
                default:
                    return 'fa-question';
            }
        }
        
        // 显示通知
        function showNotification(message, type = 'info') {
            // 创建通知元素
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 transform transition-all duration-500 ease-in-out translate-x-full opacity-0`;
            
            // 设置通知样式
            if (type === 'success') {
                notification.classList.add('bg-green-50', 'border-l-4', 'border-green-500', 'text-green-800');
            } else if (type === 'error') {
                notification.classList.add('bg-red-50', 'border-l-4', 'border-red-500', 'text-red-800');
            } else {
                notification.classList.add('bg-blue-50', 'border-l-4', 'border-blue-500', 'text-blue-800');
            }
            
            // 设置通知内容
            notification.innerHTML = `
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fa ${getNotificationIcon(type)}"></i>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm font-medium">${message}</p>
                    </div>
                    <button class="ml-4 text-gray-400 hover:text-gray-600 focus:outline-none">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            `;
            
            // 添加到页面
            document.body.appendChild(notification);
            
            // 显示通知
            setTimeout(() => {
                notification.classList.remove('translate-x-full', 'opacity-0');
            }, 100);
            
            // 点击关闭按钮
            const closeButton = notification.querySelector('button');
            closeButton.addEventListener('click', () => {
                notification.classList.add('translate-x-full', 'opacity-0');
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 500);
            });
            
            // 自动关闭
            setTimeout(() => {
                notification.classList.add('translate-x-full', 'opacity-0');
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 500);
            }, 5000);
        }
        
        // 根据通知类型获取图标
        function getNotificationIcon(type) {
            switch(type) {
                case 'success':
                    return 'fa-check-circle';
                case 'error':
                    return 'fa-exclamation-circle';
                case 'info':
                    return 'fa-info-circle';
                default:
                    return 'fa-bell';
            }
        }
        
        // 页面加载完成后初始化
        document.addEventListener('DOMContentLoaded', () => {
            // 加载数据
            loadData();
            
            // 刷新按钮事件
            const refreshBtn = document.getElementById('refresh-btn');
            refreshBtn.addEventListener('click', () => {
                loadData();
                // 添加按钮动画
                refreshBtn.classList.add('animate-spin-slow');
                setTimeout(() => {
                    refreshBtn.classList.remove('animate-spin-slow');
                }, 1000);
            });
            
            // 平滑滚动
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    
                    const targetId = this.getAttribute('href');
                    const targetElement = document.querySelector(targetId);
                    
                    if (targetElement) {
                        window.scrollTo({
                            top: targetElement.offsetTop - 80,
                            behavior: 'smooth'
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>    
